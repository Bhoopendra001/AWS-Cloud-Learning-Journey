🔐 AWS IAM – Secure Access Management | Day 2 of My AWS Cloud Journey ☁️

Today, I explored AWS Identity and Access Management (IAM) – the service that helps control access to AWS resources securely.

Key steps I worked on:
✅ Created IAM users for different roles
✅ Designed custom IAM policies to define permissions
✅ Attached policies to users & roles
✅ Tested access to AWS services
✅ Followed the “Least Privilege Principle” to enhance security

Why IAM is Important?
Because without proper access control, even the most powerful cloud setup can be vulnerable. IAM ensures that the right people have the right access at the right time.

Next Step: I’ll be diving into MFA (Multi-Factor Authentication) & role-based access for better security.

#AWS #CloudComputing #AWSIAM #CyberSecurity #LearningInPublic #TechJourney

Step-to-step Solution of this task:

# Day 2 – AWS IAM Setup

## Steps Performed
1. Created 3 IAM users (Admin, Developer, ReadOnly).
2. Designed custom policies:
   - ReadOnlyAccess for Developer
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "s3:GetObject",
        "s3:ListBucket"
      ],
      "Resource": "*"
    }
  ]
}

3. Attached policies and tested access.

## Testing
- Admin user → Able to create S3 bucket ✅
- Developer user → Access denied for bucket creation ❌

## Key Learnings
- Always follow Least Privilege Principle
- Test policies before applying in production


